[{"/Users/s89428/Documents/Project/algorithm/knockout-schema/src/index.js":"1","/Users/s89428/Documents/Project/algorithm/knockout-schema/src/App.js":"2","/Users/s89428/Documents/Project/algorithm/knockout-schema/src/reportWebVitals.js":"3","/Users/s89428/Documents/Project/algorithm/knockout-schema/src/components/Schema.js":"4","/Users/s89428/Documents/Project/algorithm/knockout-schema/src/components/Home.js":"5","/Users/s89428/Documents/Project/algorithm/knockout-schema/src/components/RegisterBox.js":"6","/Users/s89428/Documents/Project/algorithm/knockout-schema/src/components/Registered.js":"7"},{"size":335,"mtime":1611599242579,"results":"8","hashOfConfig":"9"},{"size":1147,"mtime":1611647455818,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1611550210355,"results":"11","hashOfConfig":"9"},{"size":4909,"mtime":1611601476846,"results":"12","hashOfConfig":"9"},{"size":839,"mtime":1611601498129,"results":"13","hashOfConfig":"9"},{"size":5583,"mtime":1611647695696,"results":"14","hashOfConfig":"9"},{"size":1877,"mtime":1611647646622,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"7khxul",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/Users/s89428/Documents/Project/algorithm/knockout-schema/src/index.js",[],["34","35"],"/Users/s89428/Documents/Project/algorithm/knockout-schema/src/App.js",[],"/Users/s89428/Documents/Project/algorithm/knockout-schema/src/reportWebVitals.js",[],"/Users/s89428/Documents/Project/algorithm/knockout-schema/src/components/Schema.js",["36"],"import React, { Component } from 'react';\nimport { Parallax } from 'react-parallax';\nimport _ from 'lodash';\n\nconst imageHeight = {\n    height: '100vh',\n};\n\nconst image = \"https://media-public.canva.com/MADGx8_0l5o/4/screen_2x.jpg\";\n\nclass Schema extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          messages: []\n        };\n        let app = this.props.db.database().ref('registered');\n\n        app.on('value', snapshot => {\n          this.getData(snapshot.val());\n        });\n      }\n      getData(values){\n        let messagesVal = values;\n        let messages = _(messagesVal)\n                        .keys()\n                        .map(messageKey => {\n                            let cloned = _.clone(messagesVal[messageKey]);\n                            cloned.key = messageKey;\n                            return cloned;\n                        }).value();\n        this.setState({\n            messages: messages\n        });\n      }\n    render() {\n        let messageNodes = this.state.messages.map((message) => {\n            return (\n                <li className=\"match\">\n                    {message.aka}\n                </li>\n            )\n        });\n\n        return (\n        <React.Fragment>\n            <Parallax bgImage={image}>\n                <div style={imageHeight}>\n                    <div className=\"knockout-scheme\">\n                        <ul className=\"round\">\n                            {/*messageNodes*/}\n                            <li className=\"match\">Match 1</li>\n                            <li className=\"match\">Match 2</li>\n                            <li className=\"match\">Match 3</li>\n                            <li className=\"match\">Match 4</li>\n                            <li className=\"match\">Match 5</li>\n                            <li className=\"match\">Match 6</li>\n                            <li className=\"match\">Match 7</li>\n                            <li className=\"match\">Match 8</li>\n                            <li className=\"match\">Match 9</li>\n                            <li className=\"match\">Match 10</li>\n                            <li className=\"match\">Match 11</li>\n                            <li className=\"match\">Match 12</li>\n                            <li className=\"match\">Match 13</li>\n                            <li className=\"match\">Match 14</li>\n                            <li className=\"match\">Match 15</li>\n                            <li className=\"match\">Match 16</li>\n                        </ul>\n                        <ul className=\"round\">\n                            <li className=\"match\">Match 17</li>\n                            <li>&nbsp;</li>\n                            <li className=\"match\">Match 18</li>\n                            <li>&nbsp;</li>\n                            <li className=\"match\">Match 19</li>\n                            <li>&nbsp;</li>\n                            <li className=\"match\">Match 20</li>\n                            <li>&nbsp;</li>\n                            <li className=\"match\">Match 21</li>\n                            <li>&nbsp;</li>\n                            <li className=\"match\">Match 22</li>\n                            <li>&nbsp;</li>\n                            <li className=\"match\">Match 23</li>\n                            <li>&nbsp;</li>\n                            <li className=\"match\">Match 24</li>\n                        </ul>\n                        \n                        <ul className=\"round\">\n                            <li className=\"match\">Match 25</li>\n                            <li>&nbsp;</li>\n                            <li>&nbsp;</li>\n                            <li>&nbsp;</li>\n                            <li className=\"match\">Match 26</li>\n                            <li>&nbsp;</li>\n                            <li>&nbsp;</li>\n                            <li>&nbsp;</li>\n                            <li className=\"match\">Match 27</li>\n                            <li>&nbsp;</li>\n                            <li>&nbsp;</li>\n                            <li>&nbsp;</li>\n                            <li className=\"match\">Match 28</li>\n                        </ul>\n                        \n                        <ul className=\"round\">\n                            <li className=\"match\">Match 29</li>\n                            <li>&nbsp;</li>\n                            <li className=\"match\">Match 30</li>\n                        </ul>\n                        \n                        <ul className=\"round\">\n                            <li className=\"match\">Final Round</li>\n                        </ul>\n\n                        <ul className=\"round\">\n                            <li className=\"match\">Knockout Game!!</li>\n                        </ul>\n                    </div>\n                </div>\n            </Parallax>\n        </React.Fragment>\n        )\n    }\n}\n\nexport default Schema;","/Users/s89428/Documents/Project/algorithm/knockout-schema/src/components/Home.js",[],"/Users/s89428/Documents/Project/algorithm/knockout-schema/src/components/RegisterBox.js",["37","38","39","40"],"import React, {Component} from 'react';\nimport { Parallax } from 'react-parallax';\nimport trim from 'trim';\n\nconst initialState = {};\nconst image = \"https://media-public.canva.com/MADQ4rQ5Z3E/1/screen_2x.jpg\";\n\nclass RegisterBox extends Component {\n    constructor(props){\n        super(props);\n        this.onKeyup = this.onKeyup.bind(this);\n        this.state = this.getInitialState();\n        console.log(process.env.REACT_APP_HI);\n    }\n\n    getInitialState = () => ({\n        contact: {\n            cardId: '',\n            email: '',\n            aka: '',\n            firstname: '',\n            lastname: ''\n        }\n    })\n\n    handleChange = (propertyName) => (event) => {\n        const { contact } = this.state;\n        const newContact = {\n          ...contact,\n          [propertyName]: event.target.value\n        };\n        this.setState({ contact: newContact });\n    }\n\n    onKeyup(e){\n        if(e.keyCode === 13 && trim(e.target.value) !== ''){\n            e.preventDefault();\n            let dbCon = this.props.db.database().ref('/registered');\n            const { contact } = this.state;\n\n            dbCon.push({\n                cardId: trim(this.state.contact.cardId),\n                email: trim(this.state.contact.email),\n                aka: trim(this.state.contact.aka),\n                firstname: trim(this.state.contact.firstname),\n                lastname: trim(this.state.contact.lastname)\n            });\n            this.setState(this.getInitialState());\n        }\n    }\n\n  render() {\n        return (\n            <Parallax bgImage={image}>\n                <div style={{height: '80vh'}}>\n                    <div className=\"block\">\n                        <h1>\n                            <p>To Fight with us!!</p>\n                            <p>Register here</p>\n\n                            <div className=\"wrapper\">\n                                <form class=\"contact-form row\">\n                                    <div className=\"input form-field col x-50\">\n                                        <input \n                                            type=\"email\" \n                                            id=\"input\" \n                                            className=\"input-text\" \n                                            placeholder=\"Your email, e.g. nicholas.c@scb.co.th\"\n                                            onChange={this.handleChange('email')}\n                                            onKeyUp={this.onKeyup}\n                                            value={this.state.contact.email}\n                                        />\n                                        <label for=\"input\" className=\"input-label\">Email</label>\n                                    </div>\n                                    <div className=\"input form-field col x-50\">\n                                        <input \n                                            type=\"text\" \n                                            id=\"input\" \n                                            className=\"input-text\" \n                                            placeholder=\"Your AKA, e.g. Autta\" \n                                            onChange={this.handleChange('aka')}\n                                            onKeyUp={this.onKeyup}\n                                            value={this.state.contact.aka}\n                                        />\n                                        <label for=\"input\" className=\"input-label\">AKA</label>\n                                    </div>\n                                    <div className=\"input form-field col x-50\">\n                                        <input \n                                            type=\"text\" \n                                            id=\"input\" \n                                            className=\"input-text\" \n                                            placeholder=\"Your first name, e.g. Nicholas\" \n                                            onChange={this.handleChange('firstname')}\n                                            onKeyUp={this.onKeyup}\n                                            value={this.state.contact.firstname}\n                                        />\n                                        <label for=\"input\" className=\"input-label\">First name</label>\n                                    </div>\n                                    <div className=\"input form-field col x-50\">\n                                        <input \n                                            type=\"text\" \n                                            id=\"input\" \n                                            className=\"input-text\" \n                                            placeholder=\"Your last name, e.g. Cage\" \n                                            onChange={this.handleChange('lastname')} \n                                            onKeyUp={this.onKeyup}\n                                            value={this.state.contact.lastname}\n                                        />\n                                        <label for=\"input\" className=\"input-label\">Last name</label>\n                                    </div>\n                                </form>\n                            </div>\n\n                            <p>Clone <a href=\"https://github.com/iamgique/FightingICE\" target=\"_blank\">FightingICE</a> and <a href=\"https://github.com/iamgique/FighterAI\" target=\"_blank\">FightingAI</a></p>\n                        </h1>\n\n                    </div>\n                </div>\n            </Parallax>\n        )\n  }\n}\n\nexport default RegisterBox","/Users/s89428/Documents/Project/algorithm/knockout-schema/src/components/Registered.js",["41","42"],"import React, { Component } from 'react';\nimport { Parallax } from 'react-parallax';\nimport _ from 'lodash';\n\nlet maximumPlayer = 32;\nconst inside = {\n    background: \"#000000\",\n    color: \"#ffffff\",\n    position: \"relative\",\n    top: \"60%\",\n    left: \"50%\",\n    transform: \"translate(-50%,-100%)\",\n    display: \"inline\",\n};\n\nconst imageHeight = {\n    height: '50vh',\n};\n\nconst image = \"https://media-public.canva.com/MAAgcB7thl4/1/screen_3x.jpg\";\n\nclass Registered extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          messages: []\n        };\n        let app = this.props.db.database().ref('registered');\n        \n        app.on('value', snapshot => {\n          this.getData(snapshot.val());\n        });\n    }\n    getData(values){\n        let messagesVal = values;\n        let messages = _(messagesVal)\n                        .keys()\n                        .map(messageKey => {\n                            let cloned = _.clone(messagesVal[messageKey]);\n                            cloned.key = messageKey;\n                            return cloned;\n                        }).value();\n        this.setState({\n            messages: messages\n        });\n    }\n    render() {\n        let messageNodes = this.state.messages.map((message, index) => {\n            return (\n                <li>\n                    {message.aka}\n                </li>\n            )\n        });\n\n        return (\n        <React.Fragment>\n            <Parallax bgImage={image}>\n                <div style={imageHeight}>\n                    <div className=\"block\">\n                        <h3>Registered</h3>\n                        <ul>\n                            {messageNodes}\n                        </ul>\n                    </div>\n                </div>\n            </Parallax>\n        </React.Fragment>\n        )\n    }\n}\n\nexport default Registered;",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":37,"column":13,"nodeType":"49","messageId":"50","endLine":37,"endColumn":25},{"ruleId":"47","severity":1,"message":"51","line":5,"column":7,"nodeType":"49","messageId":"50","endLine":5,"endColumn":19},{"ruleId":"47","severity":1,"message":"52","line":39,"column":21,"nodeType":"49","messageId":"50","endLine":39,"endColumn":28},{"ruleId":"53","severity":1,"message":"54","line":114,"column":38,"nodeType":"55","endLine":114,"endColumn":104},{"ruleId":"53","severity":1,"message":"54","line":114,"column":124,"nodeType":"55","endLine":114,"endColumn":188},{"ruleId":"47","severity":1,"message":"56","line":5,"column":5,"nodeType":"49","messageId":"50","endLine":5,"endColumn":18},{"ruleId":"47","severity":1,"message":"57","line":6,"column":7,"nodeType":"49","messageId":"50","endLine":6,"endColumn":13},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'messageNodes' is assigned a value but never used.","Identifier","unusedVar","'initialState' is assigned a value but never used.","'contact' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'maximumPlayer' is assigned a value but never used.","'inside' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]